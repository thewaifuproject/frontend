{"version":3,"sources":["components/TooltipQuestion/TooltipQuestion.js","components/BidPanel/BidPanel.js","components/TabsBidPanel/TabsBidPanel.js","views/WaifuDetails/WaifuDetails.js"],"names":["TooltipItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","tooltipOpen","setState","react_default","a","createElement","className","id","reactstrap_es","placement","pos","isOpen","target","text","React","Component","BidPanel","onDismissAlert","updateCountDown","countdown","Api","wid","countDownDate","alert","alertText","active","show","web3","intervalId","setInterval","now","Date","getTime","distance","cdown","Math","floor","clearInterval","e","realBidValue","value","fakeBidValue","_this2","net","console","log","parseInt","logged","outline","color","xs","sm","TooltipQuestion","tip_realbid","placeholder","type","onChange","onInputChangeReal","addonType","tip_fakebid","onInputChangeFake","href","onClick","bid","TabsBidPanel","activeTab","tab","tabs","classnames","tabId","waifuName","replace","howAuctionsWork","WaifuDetails","closeTour","waifuId","match","params","isTourOpen","fetch","then","res","clone","json","name","waifuImage","image","waifuDescription","description","catch","error","message","timeout","in","fadeIn","md","width","src","components_BidPanel_BidPanel","components_TabsBidPanel_TabsBidPanel","dist_default","steps","stepsWaifuDetail","onRequestClose","closeWithMask","showNumber","showNavigationNumber","showNavigation","showButtons","showCloseButton"],"mappings":"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","file":"static/js/51.05a1e6e8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Tooltip } from 'reactstrap';\r\n\r\nclass TooltipItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      tooltipOpen: false\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      tooltipOpen: !this.state.tooltipOpen\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <span>\r\n        <span className=\"fa fa-question-circle\" id={'Tooltip-' + this.props.id}></span>\r\n        <Tooltip placement={this.props.pos} isOpen={this.state.tooltipOpen} target={'Tooltip-' + this.props.id} toggle={this.toggle}>\r\n          {this.props.text}\r\n        </Tooltip>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TooltipItem;","import React, { Component } from 'react';\r\nimport './BidPanel.css';\r\n\r\nimport { Card, CardBody, Button, InputGroup, Input, InputGroupAddon } from 'reactstrap';\r\nimport { Col, Row, Container, Alert } from 'reactstrap';\r\n\r\nimport TooltipItem from '../TooltipQuestion/TooltipQuestion'\r\n\r\nimport * as Api from '../../dist/api'\r\n\r\nclass BidPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onDismissAlert = this.onDismissAlert.bind(this);\r\n    this.updateCountDown = this.updateCountDown.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n\r\n    let countdown = Api.getCountDown(this.props.wid)\r\n\r\n    this.state = {\r\n      tooltipOpen: false,\r\n      countDownDate: countdown[0],\r\n      countdown:'-',\r\n      alert: false,\r\n      alertText: '',\r\n      active:countdown[1],\r\n      show: false,\r\n      web3: true\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    var intervalId = setInterval(this.updateCountDown, 1000);\r\n    // store intervalId in the state so it can be accessed later:\r\n    this.setState({intervalId: intervalId});\r\n  }\r\n\r\n  updateCountDown(){\r\n    // Get todays date and time\r\n    var now = new Date().getTime();\r\n                \r\n    // Find the distance between now and the count down date\r\n    var distance = this.state.countDownDate - now;\r\n    \r\n    // Time calculations for days, hours, minutes and seconds\r\n    //var days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n    var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n    var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n    var seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n    \r\n    var cdown = hours + \"h \" + minutes + \"m \" + seconds + \"s \";\r\n\r\n    if (distance < 0 || ! this.state.active) {\r\n        clearInterval(this.state.intervalId);\r\n        cdown = \"BID TIME HAS ENDED\";\r\n    }\r\n    this.setState({ countdown:cdown });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // use intervalId from the state to clear the interval\r\n    clearInterval(this.state.intervalId);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      tooltipOpen: !this.state.tooltipOpen\r\n    });\r\n  }\r\n\r\n  onInputChangeReal (e) {\r\n    this.setState({ realBidValue: e.target.value });\r\n  }\r\n\r\n  onInputChangeFake (e) {\r\n    this.setState({ fakeBidValue: e.target.value });\r\n  }\r\n  \r\n  bid(){\r\n    Api.checkNetwork((net)=>{\r\n      console.log(net)\r\n      if (Api.checkWeb3()){\r\n        this.setState({ web3: false});\r\n        this.setState({ alert: true });\r\n      } else if (!net){\r\n        this.setState({ alertText: \"Oops! You are not in the correct network, change the network to Rinkeby. (In the metamask extension, top selector)\" });\r\n        this.setState({ alert: true });\r\n      }\r\n      else if (parseInt(this.state.realBidValue)>parseInt(this.state.fakeBidValue)){\r\n        this.setState({ alertText: \"Fake bid must be greater or equal than real bid.\" });\r\n        this.setState({ alert: true });\r\n      } else {\r\n        Api.startBid(this.props.wid, this.state.realBidValue, this.state.fakeBidValue, (logged) => this.setState({ alert:logged, alertText: \"You are not logged in in Metamask!\"}))\r\n      }\r\n    })\r\n  }\r\n\r\n  onDismissAlert(){\r\n    this.setState({ alert: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card outline color=\"secondary\">\r\n            <CardBody>\r\n                <Container>\r\n                    <Row>\r\n                      <Col xs=\"12\" sm=\"6\" id=\"bidreal\">\r\n                      <div>\r\n                        Real bid &nbsp;\r\n                        <TooltipItem pos='right' id='realq' text={tip_realbid}/>\r\n                      </div>\r\n                      <InputGroup>\r\n                        <Input placeholder=\"0.015\" type=\"number\" onChange={this.onInputChangeReal.bind(this)}/>\r\n                        <InputGroupAddon addonType=\"append\">ETH</InputGroupAddon>\r\n                      </InputGroup>\r\n                      </Col>\r\n                      <Col xs=\"12\" sm=\"6\" id=\"bidfake\">\r\n                      <div>\r\n                        Fake bid &nbsp;\r\n                        <TooltipItem pos='right' id='fakeq' text={tip_fakebid}/>\r\n                      </div>\r\n                        <InputGroup>\r\n                            <Input placeholder=\"0.021\" type=\"number\" onChange={this.onInputChangeFake.bind(this)}/>\r\n                            <InputGroupAddon addonType=\"append\">ETH</InputGroupAddon>\r\n                        </InputGroup>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row className=\"countdown-row\">\r\n                      <Col id=\"bidtimer\">\r\n                        <div className=\"float-left\">\r\n                          <span>Auction ends in:</span>\r\n                          <h2>{this.state.countdown}</h2>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row className=\"countdown-row\">\r\n                      <Col>\r\n                      <Alert color=\"danger\" isOpen={this.state.alert} toggle={this.onDismissAlert}>\r\n                        {(!this.state.web3)?<div>No wallet has been detected, do you want to know how to download one? <a href=\"https://waifuchain.moe/tutorial.html\" target=\"__blank\" className=\"alert-link\">Click here to visit the tutorial!</a></div>:this.state.alertText} \r\n                      </Alert>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                          <Button color=\"primary\" className=\"float-right\" onClick={this.bid.bind(this)}>BID NOW</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BidPanel\r\n\r\n\r\nconst tip_realbid = \"Enter here how much do you want to bid on the waifu in ETH\"\r\nconst tip_fakebid = \"Enter here an arbitrary value greater than or equal to your real bid\"","import React, { Component } from 'react';\r\nimport './TabsBidPanel.css';\r\n\r\nimport { Fade, Col, Row, Container } from 'reactstrap';\r\nimport { Nav, NavItem, NavLink, TabContent, TabPane, Card, CardBody, Button, InputGroup, Input, InputGroupAddon, Tooltip } from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nclass TabsBidPanel extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.state = {\r\n            activeTab: '1'\r\n        };\r\n\r\n    }\r\n\r\n    toggle(tab) {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n            activeTab: tab\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <Nav tabs>\r\n            <NavItem>\r\n                <NavLink\r\n                className={classnames({ active: this.state.activeTab === '1' })}\r\n                onClick={() => { this.toggle('1'); }}>\r\n                Information\r\n                </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink\r\n                className={classnames({ active: this.state.activeTab === '2' })}\r\n                onClick={() => { this.toggle('2'); }}>\r\n                How auctions work\r\n                </NavLink>\r\n            </NavItem>\r\n            </Nav>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n            <TabPane tabId=\"1\">\r\n                <Row>\r\n                <Col sm=\"12\">\r\n                    <h4>Biography</h4>\r\n                    <a className='nostile width100' href={\"https://waifu.wiki/index.php/\"+this.props.waifuName.replace(' ', '_')} target='__blank'><Button outline color=\"primary\">Know more on the wiki</Button></a>\r\n                </Col>\r\n                </Row>\r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n                {howAuctionsWork}\r\n            </TabPane>\r\n            </TabContent>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TabsBidPanel\r\n\r\nconst howAuctionsWork = \"The bid you made and the bids other users made are completely private. To assure that privacy, each user will make two bids, one “real” and another one “fake”. Only when the bidding process ends, you will know if you got the waifu. After that, the user has to manually take action to claim the waifu.\"","import React, { Component } from 'react';\r\nimport { Fade, Col, Row, Container } from 'reactstrap';\r\n\r\nimport BidPanel from '../../components/BidPanel/BidPanel'\r\nimport TabsBidPanel from '../../components/TabsBidPanel/TabsBidPanel'\r\nimport './WaifuDetails.css'\r\n\r\nimport '../../tourHelper.css'\r\nimport Tour from 'reactour'\r\n\r\nimport { stepsWaifuDetail } from '../../tour'\r\n\r\nimport * as Api from '../../dist/api'\r\n\r\nclass WaifuDetails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.closeTour = this.closeTour.bind(this)\r\n        this.state = {\r\n            waifuId: this.props.match.params.id,\r\n            isTourOpen: true\r\n        };\r\n\r\n    }\r\n\r\n    closeTour(){\r\n        this.setState({isTourOpen:false})\r\n    }\r\n\r\n    componentWillMount() {\r\n        fetch('https://api.waifuchain.moe/?waifu=' + this.state.waifuId)\r\n            .then(res => {\r\n                return res.clone().json()\r\n            }).then(res => {\r\n                this.setState({\r\n                    waifuName: res.name,\r\n                    waifuImage: res.image,\r\n                    waifuDescription: res.description\r\n                });\r\n            }).catch(function (error) {\r\n                console.log('Hubo un problema con la petición Fetch:' + error.message);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Fade timeout={this.state.timeout} in={this.state.fadeIn}>\r\n                    <Container id=\"bidcont\" className=\"_main-container\">\r\n                        <Row>\r\n                            <Col className=\"image-container\" xs=\"12\" md=\"4\">\r\n                                <h1>{this.state.waifuName}</h1>\r\n                                <img width=\"100%\" src={this.state.waifuImage} />\r\n                            </Col>\r\n                            <Col className=\"info-container\" xs=\"12\" md=\"8\">\r\n                                <div>\r\n                                    <h1>{this.state.waifuName}</h1>\r\n                                    <p>{this.state.waifuDescription}</p>\r\n                                </div>\r\n                                <div id=\"bidpanel\">\r\n                                    <BidPanel wid={this.state.waifuId} />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                        <div className='tabs-container' >\r\n                            <TabsBidPanel waifuName={(this.state.waifuName) ? this.state.waifuName : ''} />\r\n                        </div>\r\n                    </Container>\r\n                </Fade>\r\n                <Tour\r\n                    steps={stepsWaifuDetail}\r\n                    isOpen={this.state.isTourOpen}\r\n                    onRequestClose={this.closeTour}\r\n                    closeWithMask={false}\r\n                    showNumber={false}\r\n                    showNavigationNumber={false}\r\n                    showNavigation={false}\r\n                    showButtons={false}\r\n                    className=\"tourHelper\"\r\n                    showCloseButton={false}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WaifuDetails;"],"sourceRoot":""}