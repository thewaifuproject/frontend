{"version":3,"sources":["../node_modules/react-vertical-timeline-component/dist-es6/index.js","../node_modules/react-vertical-timeline-component/dist-es6/VerticalTimeline.js","../node_modules/react-vertical-timeline-component/dist-es6/VerticalTimelineElement.js","../node_modules/react-visibility-sensor/visibility-sensor.js","../node_modules/create-react-class/index.js","../node_modules/create-react-class/factory.js","../node_modules/fbjs/lib/emptyObject.js","../node_modules/fbjs/lib/invariant.js","../node_modules/react-visibility-sensor/lib/is-visible-with-offset.js"],"names":["module","exports","VerticalTimeline","__webpack_require__","default","VerticalTimelineElement","Object","defineProperty","value","_react2","_interopRequireDefault","_propTypes2","_classnames2","obj","__esModule","_ref","animate","children","className","layout","createElement","vertical-timeline--animate","vertical-timeline--two-columns","vertical-timeline--one-column","propTypes","oneOfType","arrayOf","node","isRequired","string","bool","oneOf","defaultProps","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react","_reactVisibilitySensor2","_Component","instance","TypeError","_classCallCheck","this","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","onVisibilitySensorChange","bind","state","visible","subClass","superClass","create","constructor","setPrototypeOf","_inherits","Component","isVisible","setState","_props","id","icon","iconStyle","iconOnClick","date","position","style","visibilitySensorProps","vertical-timeline-element--left","vertical-timeline-element--right","vertical-timeline-element--no-children","onChange","onClick","element","shape","func","partialVisibility","offset","bottom","React","ReactDOM","PropTypes","createReactClass","isVisibleWithOffset","displayName","active","delayedCall","top","number","left","right","direction","scrollCheck","scrollDelay","scrollThrottle","resizeCheck","resizeDelay","resizeThrottle","intervalCheck","intervalDelay","containment","window","instanceOf","Element","any","minTopValue","getDefaultProps","getInitialState","visibilityRect","componentDidMount","findDOMNode","startWatching","componentWillUnmount","stopWatching","componentDidUpdate","prevProps","getContainer","addEventListener","event","delay","throttle","timeout","debounceCheck","later","check","info","fn","setTimeout","clearTimeout","getLastTimeout","interval","setInterval","debounceEvent","debounceInfo","removeEventListener","clearInterval","roundRectDown","rect","Math","floor","containmentRect","el","undefined","width","height","normalizeRect","getBoundingClientRect","containmentDOMRect","innerHeight","document","documentElement","clientHeight","innerWidth","clientWidth","hasSize","partialVisible","console","warn","render","Function","Children","only","factory","Error","ReactNoopUpdateQueue","updater","isValidElement","_assign","emptyObject","_invariant","MIXINS_KEY","ReactComponent","injectedMixins","ReactClassInterface","mixins","statics","contextTypes","childContextTypes","getChildContext","componentWillMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","updateComponent","ReactClassStaticInterface","getDerivedStateFromProps","RESERVED_SPEC_KEYS","_displayName","_mixins","mixSpecIntoComponent","_childContextTypes","_contextTypes","_getDefaultProps","createMergedResultFunction","_propTypes","_statics","name","property","isReserved","isAlreadyDefined","specPolicy","mixStaticSpecIntoComponent","autobind","validateMethodOverride","ReactClassMixin","spec","proto","autoBindPairs","__reactAutoBindPairs","isReactClassMethod","createChainedFunction","push","mergeIntoWithNoDuplicateKeys","one","two","a","apply","b","c","bindAutoBindMethod","component","method","IsMountedPreMixin","__isMounted","IsMountedPostMixin","replaceState","newState","callback","enqueueReplaceState","isMounted","ReactClassComponent","context","pairs","autoBindKey","bindAutoBindMethods","refs","initialState","Array","isArray","methodName","forEach","validateFormat","format","condition","d","e","f","error","args","argIndex","replace","framesToPop","offsetDir","offsetVal"],"mappings":"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","file":"static/js/58.67820060.chunk.js","sourcesContent":["'use strict'; // this should be the entry point to your library\n\nmodule.exports = {\n  VerticalTimeline: require('./VerticalTimeline').default,\n  // eslint-disable-line global-require\n  VerticalTimelineElement: require('./VerticalTimelineElement').default // eslint-disable-line global-require\n\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar VerticalTimeline = function VerticalTimeline(_ref) {\n  var animate = _ref.animate,\n      children = _ref.children,\n      className = _ref.className,\n      layout = _ref.layout;\n  return _react2.default.createElement('div', {\n    className: (0, _classnames2.default)(className, 'vertical-timeline', {\n      'vertical-timeline--animate': animate,\n      'vertical-timeline--two-columns': layout === '2-columns',\n      'vertical-timeline--one-column': layout === '1-column'\n    })\n  }, children);\n};\n\nVerticalTimeline.propTypes = {\n  children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]).isRequired,\n  className: _propTypes2.default.string,\n  animate: _propTypes2.default.bool,\n  layout: _propTypes2.default.oneOf(['1-column', '2-columns'])\n};\nVerticalTimeline.defaultProps = {\n  animate: true,\n  className: '',\n  layout: '2-columns'\n};\nexports.default = VerticalTimeline;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _reactVisibilitySensor = require('react-visibility-sensor');\n\nvar _reactVisibilitySensor2 = _interopRequireDefault(_reactVisibilitySensor);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar VerticalTimelineElement = function (_Component) {\n  _inherits(VerticalTimelineElement, _Component);\n\n  function VerticalTimelineElement(props) {\n    _classCallCheck(this, VerticalTimelineElement);\n\n    var _this = _possibleConstructorReturn(this, (VerticalTimelineElement.__proto__ || Object.getPrototypeOf(VerticalTimelineElement)).call(this, props));\n\n    _this.onVisibilitySensorChange = _this.onVisibilitySensorChange.bind(_this);\n    _this.state = {\n      visible: false\n    };\n    return _this;\n  }\n\n  _createClass(VerticalTimelineElement, [{\n    key: 'onVisibilitySensorChange',\n    value: function onVisibilitySensorChange(isVisible) {\n      if (isVisible) {\n        this.setState({\n          visible: true\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          id = _props.id,\n          children = _props.children,\n          icon = _props.icon,\n          iconStyle = _props.iconStyle,\n          iconOnClick = _props.iconOnClick,\n          date = _props.date,\n          position = _props.position,\n          style = _props.style,\n          className = _props.className,\n          visibilitySensorProps = _props.visibilitySensorProps;\n      var visible = this.state.visible;\n      return _react2.default.createElement('div', {\n        id: id,\n        className: (0, _classnames2.default)(className, 'vertical-timeline-element', {\n          'vertical-timeline-element--left': position === 'left',\n          'vertical-timeline-element--right': position === 'right',\n          'vertical-timeline-element--no-children': children === ''\n        }),\n        style: style\n      }, _react2.default.createElement(_reactVisibilitySensor2.default, _extends({}, visibilitySensorProps, {\n        onChange: this.onVisibilitySensorChange\n      }), _react2.default.createElement('div', null, _react2.default.createElement('span', {\n        // eslint-disable-line jsx-a11y/no-static-element-interactions\n        style: iconStyle,\n        onClick: iconOnClick,\n        className: 'vertical-timeline-element-icon ' + (visible ? 'bounce-in' : 'is-hidden')\n      }, icon), _react2.default.createElement('div', {\n        className: 'vertical-timeline-element-content ' + (visible ? 'bounce-in' : 'is-hidden')\n      }, children, _react2.default.createElement('span', {\n        className: 'vertical-timeline-element-date'\n      }, date)))));\n    }\n  }]);\n\n  return VerticalTimelineElement;\n}(_react.Component);\n\nVerticalTimelineElement.propTypes = {\n  id: _propTypes2.default.string,\n  children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),\n  className: _propTypes2.default.string,\n  icon: _propTypes2.default.element,\n  iconStyle: _propTypes2.default.shape({}),\n  iconOnClick: _propTypes2.default.func,\n  style: _propTypes2.default.shape({}),\n  date: _propTypes2.default.node,\n  position: _propTypes2.default.string,\n  visibilitySensorProps: _propTypes2.default.shape({})\n};\nVerticalTimelineElement.defaultProps = {\n  id: '',\n  children: '',\n  className: '',\n  icon: null,\n  iconStyle: null,\n  style: null,\n  date: '',\n  position: '',\n  iconOnClick: null,\n  visibilitySensorProps: {\n    partialVisibility: true,\n    offset: {\n      bottom: 80\n    }\n  }\n};\nexports.default = VerticalTimelineElement;","'use strict';\n\nvar React = require('react');\n\nvar ReactDOM = require('react-dom');\n\nvar PropTypes = require('prop-types');\n\nvar createReactClass = require('create-react-class');\n\nvar isVisibleWithOffset = require('./lib/is-visible-with-offset');\n\nfunction normalizeRect(rect) {\n  if (rect.width === undefined) {\n    rect.width = rect.right - rect.left;\n  }\n\n  if (rect.height === undefined) {\n    rect.height = rect.bottom - rect.top;\n  }\n\n  return rect;\n}\n\nmodule.exports = createReactClass({\n  displayName: 'VisibilitySensor',\n  propTypes: {\n    onChange: PropTypes.func,\n    active: PropTypes.bool,\n    partialVisibility: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['top', 'right', 'bottom', 'left'])]),\n    delayedCall: PropTypes.bool,\n    offset: PropTypes.oneOfType([PropTypes.shape({\n      top: PropTypes.number,\n      left: PropTypes.number,\n      bottom: PropTypes.number,\n      right: PropTypes.number\n    }), // deprecated offset property\n    PropTypes.shape({\n      direction: PropTypes.oneOf(['top', 'right', 'bottom', 'left']),\n      value: PropTypes.number\n    })]),\n    scrollCheck: PropTypes.bool,\n    scrollDelay: PropTypes.number,\n    scrollThrottle: PropTypes.number,\n    resizeCheck: PropTypes.bool,\n    resizeDelay: PropTypes.number,\n    resizeThrottle: PropTypes.number,\n    intervalCheck: PropTypes.bool,\n    intervalDelay: PropTypes.number,\n    containment: typeof window !== 'undefined' ? PropTypes.instanceOf(window.Element) : PropTypes.any,\n    children: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n    minTopValue: PropTypes.number\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      active: true,\n      partialVisibility: false,\n      minTopValue: 0,\n      scrollCheck: false,\n      scrollDelay: 250,\n      scrollThrottle: -1,\n      resizeCheck: false,\n      resizeDelay: 250,\n      resizeThrottle: -1,\n      intervalCheck: true,\n      intervalDelay: 100,\n      delayedCall: false,\n      offset: {},\n      containment: null,\n      children: React.createElement('span')\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      isVisible: null,\n      visibilityRect: {}\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    this.node = ReactDOM.findDOMNode(this);\n\n    if (this.props.active) {\n      this.startWatching();\n    }\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    this.stopWatching();\n  },\n  componentDidUpdate: function componentDidUpdate(prevProps) {\n    // re-register node in componentDidUpdate if children diffs [#103]\n    this.node = ReactDOM.findDOMNode(this);\n\n    if (this.props.active && !prevProps.active) {\n      this.setState(this.getInitialState());\n      this.startWatching();\n    } else if (!this.props.active) {\n      this.stopWatching();\n    }\n  },\n  getContainer: function getContainer() {\n    return this.props.containment || window;\n  },\n  addEventListener: function addEventListener(target, event, delay, throttle) {\n    if (!this.debounceCheck) {\n      this.debounceCheck = {};\n    }\n\n    var timeout;\n    var func;\n\n    var later = function () {\n      timeout = null;\n      this.check();\n    }.bind(this);\n\n    if (throttle > -1) {\n      func = function func() {\n        if (!timeout) {\n          timeout = setTimeout(later, throttle || 0);\n        }\n      };\n    } else {\n      func = function func() {\n        clearTimeout(timeout);\n        timeout = setTimeout(later, delay || 0);\n      };\n    }\n\n    var info = {\n      target: target,\n      fn: func,\n      getLastTimeout: function getLastTimeout() {\n        return timeout;\n      }\n    };\n    target.addEventListener(event, info.fn);\n    this.debounceCheck[event] = info;\n  },\n  startWatching: function startWatching() {\n    if (this.debounceCheck || this.interval) {\n      return;\n    }\n\n    if (this.props.intervalCheck) {\n      this.interval = setInterval(this.check, this.props.intervalDelay);\n    }\n\n    if (this.props.scrollCheck) {\n      this.addEventListener(this.getContainer(), 'scroll', this.props.scrollDelay, this.props.scrollThrottle);\n    }\n\n    if (this.props.resizeCheck) {\n      this.addEventListener(window, 'resize', this.props.resizeDelay, this.props.resizeThrottle);\n    } // if dont need delayed call, check on load ( before the first interval fires )\n\n\n    !this.props.delayedCall && this.check();\n  },\n  stopWatching: function stopWatching() {\n    if (this.debounceCheck) {\n      // clean up event listeners and their debounce callers\n      for (var debounceEvent in this.debounceCheck) {\n        if (this.debounceCheck.hasOwnProperty(debounceEvent)) {\n          var debounceInfo = this.debounceCheck[debounceEvent];\n          clearTimeout(debounceInfo.getLastTimeout());\n          debounceInfo.target.removeEventListener(debounceEvent, debounceInfo.fn);\n          this.debounceCheck[debounceEvent] = null;\n        }\n      }\n    }\n\n    this.debounceCheck = null;\n\n    if (this.interval) {\n      this.interval = clearInterval(this.interval);\n    }\n  },\n  roundRectDown: function roundRectDown(rect) {\n    return {\n      top: Math.floor(rect.top),\n      left: Math.floor(rect.left),\n      bottom: Math.floor(rect.bottom),\n      right: Math.floor(rect.right)\n    };\n  },\n\n  /**\n   * Check if the element is within the visible viewport\n   */\n  check: function check() {\n    var el = this.node;\n    var rect;\n    var containmentRect; // if the component has rendered to null, dont update visibility\n\n    if (!el) {\n      return this.state;\n    }\n\n    rect = normalizeRect(this.roundRectDown(el.getBoundingClientRect()));\n\n    if (this.props.containment) {\n      var containmentDOMRect = this.props.containment.getBoundingClientRect();\n      containmentRect = {\n        top: containmentDOMRect.top,\n        left: containmentDOMRect.left,\n        bottom: containmentDOMRect.bottom,\n        right: containmentDOMRect.right\n      };\n    } else {\n      containmentRect = {\n        top: 0,\n        left: 0,\n        bottom: window.innerHeight || document.documentElement.clientHeight,\n        right: window.innerWidth || document.documentElement.clientWidth\n      };\n    } // Check if visibility is wanted via offset?\n\n\n    var offset = this.props.offset || {};\n    var hasValidOffset = typeof offset === 'object';\n\n    if (hasValidOffset) {\n      containmentRect.top += offset.top || 0;\n      containmentRect.left += offset.left || 0;\n      containmentRect.bottom -= offset.bottom || 0;\n      containmentRect.right -= offset.right || 0;\n    }\n\n    var visibilityRect = {\n      top: rect.top >= containmentRect.top,\n      left: rect.left >= containmentRect.left,\n      bottom: rect.bottom <= containmentRect.bottom,\n      right: rect.right <= containmentRect.right\n    };\n    var hasSize = rect.height > 0 && rect.width > 0;\n    var isVisible = hasSize && visibilityRect.top && visibilityRect.left && visibilityRect.bottom && visibilityRect.right; // check for partial visibility\n\n    if (hasSize && this.props.partialVisibility) {\n      var partialVisible = rect.top <= containmentRect.bottom && rect.bottom >= containmentRect.top && rect.left <= containmentRect.right && rect.right >= containmentRect.left; // account for partial visibility on a single edge\n\n      if (typeof this.props.partialVisibility === 'string') {\n        partialVisible = visibilityRect[this.props.partialVisibility];\n      } // if we have minimum top visibility set by props, lets check, if it meets the passed value\n      // so if for instance element is at least 200px in viewport, then show it.\n\n\n      isVisible = this.props.minTopValue ? partialVisible && rect.top <= containmentRect.bottom - this.props.minTopValue : partialVisible;\n    } // Deprecated options for calculating offset.\n\n\n    if (typeof offset.direction === 'string' && typeof offset.value === 'number') {\n      console.warn('[notice] offset.direction and offset.value have been deprecated. They still work for now, but will be removed in next major version. Please upgrade to the new syntax: { %s: %d }', offset.direction, offset.value);\n      isVisible = isVisibleWithOffset(offset, rect, containmentRect);\n    }\n\n    var state = this.state; // notify the parent when the value changes\n\n    if (this.state.isVisible !== isVisible) {\n      state = {\n        isVisible: isVisible,\n        visibilityRect: visibilityRect\n      };\n      this.setState(state);\n      if (this.props.onChange) this.props.onChange(isVisible, visibilityRect);\n    }\n\n    return state;\n  },\n  render: function render() {\n    if (this.props.children instanceof Function) {\n      return this.props.children({\n        isVisible: this.state.isVisible,\n        visibilityRect: this.state.visibilityRect\n      });\n    }\n\n    return React.Children.only(this.props.children);\n  }\n});","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar React = require('react');\n\nvar factory = require('./factory');\n\nif (typeof React === 'undefined') {\n  throw Error('create-react-class could not find the React object. If you are using script tags, ' + 'make sure that React is being loaded before create-react-class.');\n} // Hack to grab NoopUpdateQueue from isomorphic React\n\n\nvar ReactNoopUpdateQueue = new React.Component().updater;\nmodule.exports = factory(React.Component, React.isValidElement, ReactNoopUpdateQueue);","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\n\nvar _invariant = require('fbjs/lib/invariant');\n\nif (process.env.NODE_ENV !== 'production') {\n  var warning = require('fbjs/lib/warning');\n}\n\nvar MIXINS_KEY = 'mixins'; // Helper function to allow the creation of anonymous functions which do not\n// have .name set to the name of the variable being assigned to.\n\nfunction identity(fn) {\n  return fn;\n}\n\nvar ReactPropTypeLocationNames;\n\nif (process.env.NODE_ENV !== 'production') {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n} else {\n  ReactPropTypeLocationNames = {};\n}\n\nfunction factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {\n  /**\n   * Policies that describe methods in `ReactClassInterface`.\n   */\n  var injectedMixins = [];\n  /**\n   * Composite components are higher-level components that compose other composite\n   * or host components.\n   *\n   * To create a new type of `ReactClass`, pass a specification of\n   * your new class to `React.createClass`. The only requirement of your class\n   * specification is that you implement a `render` method.\n   *\n   *   var MyComponent = React.createClass({\n   *     render: function() {\n   *       return <div>Hello World</div>;\n   *     }\n   *   });\n   *\n   * The class specification supports a specific protocol of methods that have\n   * special meaning (e.g. `render`). See `ReactClassInterface` for\n   * more the comprehensive protocol. Any other properties and methods in the\n   * class specification will be available on the prototype.\n   *\n   * @interface ReactClassInterface\n   * @internal\n   */\n\n  var ReactClassInterface = {\n    /**\n     * An array of Mixin objects to include when defining your component.\n     *\n     * @type {array}\n     * @optional\n     */\n    mixins: 'DEFINE_MANY',\n\n    /**\n     * An object containing properties and methods that should be defined on\n     * the component's constructor instead of its prototype (static methods).\n     *\n     * @type {object}\n     * @optional\n     */\n    statics: 'DEFINE_MANY',\n\n    /**\n     * Definition of prop types for this component.\n     *\n     * @type {object}\n     * @optional\n     */\n    propTypes: 'DEFINE_MANY',\n\n    /**\n     * Definition of context types for this component.\n     *\n     * @type {object}\n     * @optional\n     */\n    contextTypes: 'DEFINE_MANY',\n\n    /**\n     * Definition of context types this component sets for its children.\n     *\n     * @type {object}\n     * @optional\n     */\n    childContextTypes: 'DEFINE_MANY',\n    // ==== Definition methods ====\n\n    /**\n     * Invoked when the component is mounted. Values in the mapping will be set on\n     * `this.props` if that prop is not specified (i.e. using an `in` check).\n     *\n     * This method is invoked before `getInitialState` and therefore cannot rely\n     * on `this.state` or use `this.setState`.\n     *\n     * @return {object}\n     * @optional\n     */\n    getDefaultProps: 'DEFINE_MANY_MERGED',\n\n    /**\n     * Invoked once before the component is mounted. The return value will be used\n     * as the initial value of `this.state`.\n     *\n     *   getInitialState: function() {\n     *     return {\n     *       isOn: false,\n     *       fooBaz: new BazFoo()\n     *     }\n     *   }\n     *\n     * @return {object}\n     * @optional\n     */\n    getInitialState: 'DEFINE_MANY_MERGED',\n\n    /**\n     * @return {object}\n     * @optional\n     */\n    getChildContext: 'DEFINE_MANY_MERGED',\n\n    /**\n     * Uses props from `this.props` and state from `this.state` to render the\n     * structure of the component.\n     *\n     * No guarantees are made about when or how often this method is invoked, so\n     * it must not have side effects.\n     *\n     *   render: function() {\n     *     var name = this.props.name;\n     *     return <div>Hello, {name}!</div>;\n     *   }\n     *\n     * @return {ReactComponent}\n     * @required\n     */\n    render: 'DEFINE_ONCE',\n    // ==== Delegate methods ====\n\n    /**\n     * Invoked when the component is initially created and about to be mounted.\n     * This may have side effects, but any external subscriptions or data created\n     * by this method must be cleaned up in `componentWillUnmount`.\n     *\n     * @optional\n     */\n    componentWillMount: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component has been mounted and has a DOM representation.\n     * However, there is no guarantee that the DOM node is in the document.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been mounted (initialized and rendered) for the first time.\n     *\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */\n    componentDidMount: 'DEFINE_MANY',\n\n    /**\n     * Invoked before the component receives new props.\n     *\n     * Use this as an opportunity to react to a prop transition by updating the\n     * state using `this.setState`. Current props are accessed via `this.props`.\n     *\n     *   componentWillReceiveProps: function(nextProps, nextContext) {\n     *     this.setState({\n     *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n     *     });\n     *   }\n     *\n     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n     * transition may cause a state change, but the opposite is not true. If you\n     * need it, you are probably looking for `componentWillUpdate`.\n     *\n     * @param {object} nextProps\n     * @optional\n     */\n    componentWillReceiveProps: 'DEFINE_MANY',\n\n    /**\n     * Invoked while deciding if the component should be updated as a result of\n     * receiving new props, state and/or context.\n     *\n     * Use this as an opportunity to `return false` when you're certain that the\n     * transition to the new props/state/context will not require a component\n     * update.\n     *\n     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n     *     return !equal(nextProps, this.props) ||\n     *       !equal(nextState, this.state) ||\n     *       !equal(nextContext, this.context);\n     *   }\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @return {boolean} True if the component should update.\n     * @optional\n     */\n    shouldComponentUpdate: 'DEFINE_ONCE',\n\n    /**\n     * Invoked when the component is about to update due to a transition from\n     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n     * and `nextContext`.\n     *\n     * Use this as an opportunity to perform preparation before an update occurs.\n     *\n     * NOTE: You **cannot** use `this.setState()` in this method.\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @param {ReactReconcileTransaction} transaction\n     * @optional\n     */\n    componentWillUpdate: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component's DOM representation has been updated.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been updated.\n     *\n     * @param {object} prevProps\n     * @param {?object} prevState\n     * @param {?object} prevContext\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */\n    componentDidUpdate: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component is about to be removed from its parent and have\n     * its DOM representation destroyed.\n     *\n     * Use this as an opportunity to deallocate any external resources.\n     *\n     * NOTE: There is no `componentDidUnmount` since your component will have been\n     * destroyed by that point.\n     *\n     * @optional\n     */\n    componentWillUnmount: 'DEFINE_MANY',\n\n    /**\n     * Replacement for (deprecated) `componentWillMount`.\n     *\n     * @optional\n     */\n    UNSAFE_componentWillMount: 'DEFINE_MANY',\n\n    /**\n     * Replacement for (deprecated) `componentWillReceiveProps`.\n     *\n     * @optional\n     */\n    UNSAFE_componentWillReceiveProps: 'DEFINE_MANY',\n\n    /**\n     * Replacement for (deprecated) `componentWillUpdate`.\n     *\n     * @optional\n     */\n    UNSAFE_componentWillUpdate: 'DEFINE_MANY',\n    // ==== Advanced methods ====\n\n    /**\n     * Updates the component's currently mounted DOM representation.\n     *\n     * By default, this implements React's rendering and reconciliation algorithm.\n     * Sophisticated clients may wish to override this.\n     *\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     * @overridable\n     */\n    updateComponent: 'OVERRIDE_BASE'\n  };\n  /**\n   * Similar to ReactClassInterface but for static methods.\n   */\n\n  var ReactClassStaticInterface = {\n    /**\n     * This method is invoked after a component is instantiated and when it\n     * receives new props. Return an object to update state in response to\n     * prop changes. Return null to indicate no change to state.\n     *\n     * If an object is returned, its keys will be merged into the existing state.\n     *\n     * @return {object || null}\n     * @optional\n     */\n    getDerivedStateFromProps: 'DEFINE_MANY_MERGED'\n  };\n  /**\n   * Mapping from class specification keys to special processing functions.\n   *\n   * Although these are declared like instance properties in the specification\n   * when defining classes using `React.createClass`, they are actually static\n   * and are accessible on the constructor instead of the prototype. Despite\n   * being static, they must be defined outside of the \"statics\" key under\n   * which all other static methods are defined.\n   */\n\n  var RESERVED_SPEC_KEYS = {\n    displayName: function displayName(Constructor, _displayName) {\n      Constructor.displayName = _displayName;\n    },\n    mixins: function mixins(Constructor, _mixins) {\n      if (_mixins) {\n        for (var i = 0; i < _mixins.length; i++) {\n          mixSpecIntoComponent(Constructor, _mixins[i]);\n        }\n      }\n    },\n    childContextTypes: function childContextTypes(Constructor, _childContextTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, _childContextTypes, 'childContext');\n      }\n\n      Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, _childContextTypes);\n    },\n    contextTypes: function contextTypes(Constructor, _contextTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, _contextTypes, 'context');\n      }\n\n      Constructor.contextTypes = _assign({}, Constructor.contextTypes, _contextTypes);\n    },\n\n    /**\n     * Special case getDefaultProps which should move into statics but requires\n     * automatic merging.\n     */\n    getDefaultProps: function getDefaultProps(Constructor, _getDefaultProps) {\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, _getDefaultProps);\n      } else {\n        Constructor.getDefaultProps = _getDefaultProps;\n      }\n    },\n    propTypes: function propTypes(Constructor, _propTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, _propTypes, 'prop');\n      }\n\n      Constructor.propTypes = _assign({}, Constructor.propTypes, _propTypes);\n    },\n    statics: function statics(Constructor, _statics) {\n      mixStaticSpecIntoComponent(Constructor, _statics);\n    },\n    autobind: function autobind() {}\n  };\n\n  function validateTypeDef(Constructor, typeDef, location) {\n    for (var propName in typeDef) {\n      if (typeDef.hasOwnProperty(propName)) {\n        // use a warning instead of an _invariant so components\n        // don't show up in prod but only in __DEV__\n        if (process.env.NODE_ENV !== 'production') {\n          warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName);\n        }\n      }\n    }\n  }\n\n  function validateMethodOverride(isAlreadyDefined, name) {\n    var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null; // Disallow overriding of base class methods unless explicitly allowed.\n\n    if (ReactClassMixin.hasOwnProperty(name)) {\n      _invariant(specPolicy === 'OVERRIDE_BASE', 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name);\n    } // Disallow defining methods more than once unless explicitly allowed.\n\n\n    if (isAlreadyDefined) {\n      _invariant(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED', 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name);\n    }\n  }\n  /**\n   * Mixin helper which handles policy validation and reserved\n   * specification keys when building React classes.\n   */\n\n\n  function mixSpecIntoComponent(Constructor, spec) {\n    if (!spec) {\n      if (process.env.NODE_ENV !== 'production') {\n        var typeofSpec = typeof spec;\n        var isMixinValid = typeofSpec === 'object' && spec !== null;\n\n        if (process.env.NODE_ENV !== 'production') {\n          warning(isMixinValid, \"%s: You're attempting to include a mixin that is either null \" + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec);\n        }\n      }\n\n      return;\n    }\n\n    _invariant(typeof spec !== 'function', \"ReactClass: You're attempting to \" + 'use a component class or function as a mixin. Instead, just use a ' + 'regular object.');\n\n    _invariant(!isValidElement(spec), \"ReactClass: You're attempting to \" + 'use a component as a mixin. Instead, just use a regular object.');\n\n    var proto = Constructor.prototype;\n    var autoBindPairs = proto.__reactAutoBindPairs; // By handling mixins before any other properties, we ensure the same\n    // chaining order is applied to methods with DEFINE_MANY policy, whether\n    // mixins are listed before or after these methods in the spec.\n\n    if (spec.hasOwnProperty(MIXINS_KEY)) {\n      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n    }\n\n    for (var name in spec) {\n      if (!spec.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (name === MIXINS_KEY) {\n        // We have already handled mixins in a special case above.\n        continue;\n      }\n\n      var property = spec[name];\n      var isAlreadyDefined = proto.hasOwnProperty(name);\n      validateMethodOverride(isAlreadyDefined, name);\n\n      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n        RESERVED_SPEC_KEYS[name](Constructor, property);\n      } else {\n        // Setup methods on prototype:\n        // The following member methods should not be automatically bound:\n        // 1. Expected ReactClass methods (in the \"interface\").\n        // 2. Overridden methods (that were mixed in).\n        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n        var isFunction = typeof property === 'function';\n        var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;\n\n        if (shouldAutoBind) {\n          autoBindPairs.push(name, property);\n          proto[name] = property;\n        } else {\n          if (isAlreadyDefined) {\n            var specPolicy = ReactClassInterface[name]; // These cases should already be caught by validateMethodOverride.\n\n            _invariant(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY'), 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name); // For methods which are defined more than once, call the existing\n            // methods before calling the new property, merging if appropriate.\n\n\n            if (specPolicy === 'DEFINE_MANY_MERGED') {\n              proto[name] = createMergedResultFunction(proto[name], property);\n            } else if (specPolicy === 'DEFINE_MANY') {\n              proto[name] = createChainedFunction(proto[name], property);\n            }\n          } else {\n            proto[name] = property;\n\n            if (process.env.NODE_ENV !== 'production') {\n              // Add verbose displayName to the function, which helps when looking\n              // at profiling tools.\n              if (typeof property === 'function' && spec.displayName) {\n                proto[name].displayName = spec.displayName + '_' + name;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function mixStaticSpecIntoComponent(Constructor, statics) {\n    if (!statics) {\n      return;\n    }\n\n    for (var name in statics) {\n      var property = statics[name];\n\n      if (!statics.hasOwnProperty(name)) {\n        continue;\n      }\n\n      var isReserved = name in RESERVED_SPEC_KEYS;\n\n      _invariant(!isReserved, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name);\n\n      var isAlreadyDefined = name in Constructor;\n\n      if (isAlreadyDefined) {\n        var specPolicy = ReactClassStaticInterface.hasOwnProperty(name) ? ReactClassStaticInterface[name] : null;\n\n        _invariant(specPolicy === 'DEFINE_MANY_MERGED', 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name);\n\n        Constructor[name] = createMergedResultFunction(Constructor[name], property);\n        return;\n      }\n\n      Constructor[name] = property;\n    }\n  }\n  /**\n   * Merge two objects, but throw if both contain the same key.\n   *\n   * @param {object} one The first object, which is mutated.\n   * @param {object} two The second object\n   * @return {object} one after it has been mutated to contain everything in two.\n   */\n\n\n  function mergeIntoWithNoDuplicateKeys(one, two) {\n    _invariant(one && two && typeof one === 'object' && typeof two === 'object', 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');\n\n    for (var key in two) {\n      if (two.hasOwnProperty(key)) {\n        _invariant(one[key] === undefined, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key);\n\n        one[key] = two[key];\n      }\n    }\n\n    return one;\n  }\n  /**\n   * Creates a function that invokes two functions and merges their return values.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */\n\n\n  function createMergedResultFunction(one, two) {\n    return function mergedResult() {\n      var a = one.apply(this, arguments);\n      var b = two.apply(this, arguments);\n\n      if (a == null) {\n        return b;\n      } else if (b == null) {\n        return a;\n      }\n\n      var c = {};\n      mergeIntoWithNoDuplicateKeys(c, a);\n      mergeIntoWithNoDuplicateKeys(c, b);\n      return c;\n    };\n  }\n  /**\n   * Creates a function that invokes two functions and ignores their return vales.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */\n\n\n  function createChainedFunction(one, two) {\n    return function chainedFunction() {\n      one.apply(this, arguments);\n      two.apply(this, arguments);\n    };\n  }\n  /**\n   * Binds a method to the component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   * @param {function} method Method to be bound.\n   * @return {function} The bound method.\n   */\n\n\n  function bindAutoBindMethod(component, method) {\n    var boundMethod = method.bind(component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      boundMethod.__reactBoundContext = component;\n      boundMethod.__reactBoundMethod = method;\n      boundMethod.__reactBoundArguments = null;\n      var componentName = component.constructor.displayName;\n      var _bind = boundMethod.bind;\n\n      boundMethod.bind = function (newThis) {\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        } // User is trying to bind() an autobound method; we effectively will\n        // ignore the value of \"this\" that the user is trying to use, so\n        // let's warn.\n\n\n        if (newThis !== component && newThis !== null) {\n          if (process.env.NODE_ENV !== 'production') {\n            warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName);\n          }\n        } else if (!args.length) {\n          if (process.env.NODE_ENV !== 'production') {\n            warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName);\n          }\n\n          return boundMethod;\n        }\n\n        var reboundMethod = _bind.apply(boundMethod, arguments);\n\n        reboundMethod.__reactBoundContext = component;\n        reboundMethod.__reactBoundMethod = method;\n        reboundMethod.__reactBoundArguments = args;\n        return reboundMethod;\n      };\n    }\n\n    return boundMethod;\n  }\n  /**\n   * Binds all auto-bound methods in a component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   */\n\n\n  function bindAutoBindMethods(component) {\n    var pairs = component.__reactAutoBindPairs;\n\n    for (var i = 0; i < pairs.length; i += 2) {\n      var autoBindKey = pairs[i];\n      var method = pairs[i + 1];\n      component[autoBindKey] = bindAutoBindMethod(component, method);\n    }\n  }\n\n  var IsMountedPreMixin = {\n    componentDidMount: function componentDidMount() {\n      this.__isMounted = true;\n    }\n  };\n  var IsMountedPostMixin = {\n    componentWillUnmount: function componentWillUnmount() {\n      this.__isMounted = false;\n    }\n  };\n  /**\n   * Add more to the ReactClass base class. These are all legacy features and\n   * therefore not already part of the modern ReactComponent.\n   */\n\n  var ReactClassMixin = {\n    /**\n     * TODO: This will be deprecated because state should always keep a consistent\n     * type signature and the only use case for this, is to avoid that.\n     */\n    replaceState: function replaceState(newState, callback) {\n      this.updater.enqueueReplaceState(this, newState, callback);\n    },\n\n    /**\n     * Checks whether or not this composite component is mounted.\n     * @return {boolean} True if mounted, false otherwise.\n     * @protected\n     * @final\n     */\n    isMounted: function isMounted() {\n      if (process.env.NODE_ENV !== 'production') {\n        warning(this.__didWarnIsMounted, '%s: isMounted is deprecated. Instead, make sure to clean up ' + 'subscriptions and pending requests in componentWillUnmount to ' + 'prevent memory leaks.', this.constructor && this.constructor.displayName || this.name || 'Component');\n        this.__didWarnIsMounted = true;\n      }\n\n      return !!this.__isMounted;\n    }\n  };\n\n  var ReactClassComponent = function ReactClassComponent() {};\n\n  _assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);\n  /**\n   * Creates a composite component class given a class specification.\n   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n\n\n  function createClass(spec) {\n    // To keep our warnings more understandable, we'll use a little hack here to\n    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n    // unnecessarily identify a class without displayName as 'Constructor'.\n    var Constructor = identity(function (props, context, updater) {\n      // This constructor gets overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n      if (process.env.NODE_ENV !== 'production') {\n        warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory');\n      } // Wire up auto-binding\n\n\n      if (this.__reactAutoBindPairs.length) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n      this.state = null; // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n\n      if (process.env.NODE_ENV !== 'production') {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (initialState === undefined && this.getInitialState._isMockFunction) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n\n      _invariant(typeof initialState === 'object' && !Array.isArray(initialState), '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent');\n\n      this.state = initialState;\n    });\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n    Constructor.prototype.__reactAutoBindPairs = [];\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n    mixSpecIntoComponent(Constructor, IsMountedPreMixin);\n    mixSpecIntoComponent(Constructor, spec);\n    mixSpecIntoComponent(Constructor, IsMountedPostMixin); // Initialize the defaultProps property after all mixins have been merged.\n\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    _invariant(Constructor.prototype.render, 'createClass(...): Class specification must implement a `render` method.');\n\n    if (process.env.NODE_ENV !== 'production') {\n      warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component');\n      warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component');\n      warning(!Constructor.prototype.UNSAFE_componentWillRecieveProps, '%s has a method called UNSAFE_componentWillRecieveProps(). ' + 'Did you mean UNSAFE_componentWillReceiveProps()?', spec.displayName || 'A component');\n    } // Reduce time spent doing lookups by setting these on the prototype.\n\n\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    return Constructor;\n  }\n\n  return createClass;\n}\n\nmodule.exports = factory;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","// Tell whether the rect is visible, given an offset\n//\n// return: boolean\nmodule.exports = function (offset, rect, containmentRect) {\n  var offsetDir = offset.direction;\n  var offsetVal = offset.value; // Rules for checking different kind of offsets. In example if the element is\n  // 90px below viewport and offsetTop is 100, it is considered visible.\n\n  switch (offsetDir) {\n    case 'top':\n      return containmentRect.top + offsetVal < rect.top && containmentRect.bottom > rect.bottom && containmentRect.left < rect.left && containmentRect.right > rect.right;\n\n    case 'left':\n      return containmentRect.left + offsetVal < rect.left && containmentRect.bottom > rect.bottom && containmentRect.top < rect.top && containmentRect.right > rect.right;\n\n    case 'bottom':\n      return containmentRect.bottom - offsetVal > rect.bottom && containmentRect.left < rect.left && containmentRect.right > rect.right && containmentRect.top < rect.top;\n\n    case 'right':\n      return containmentRect.right - offsetVal > rect.right && containmentRect.left < rect.left && containmentRect.top < rect.top && containmentRect.bottom > rect.bottom;\n  }\n};"],"sourceRoot":""}